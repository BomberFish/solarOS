{"version":3,"file":"scramjet.worker.js","sources":["webpack://@mercuryworkshop/scramjet/./src/log.ts","webpack://@mercuryworkshop/scramjet/./src/scramjet.ts","webpack://@mercuryworkshop/scramjet/./src/shared.ts","webpack://@mercuryworkshop/scramjet/./src/worker/error.ts","webpack://@mercuryworkshop/scramjet/./src/worker/fakesw.ts","webpack://@mercuryworkshop/scramjet/./src/worker/fetch.ts","webpack://@mercuryworkshop/scramjet/./src/worker/index.ts"],"sourcesContent":["export default {\n\tfmt: function (severity: string, message: string, ...args: any[]) {\n\t\tconst old = Error.prepareStackTrace;\n\n\t\tError.prepareStackTrace = (_, stack) => {\n\t\t\tstack.shift(); // stack();\n\t\t\tstack.shift(); // fmt();\n\t\t\tstack.shift();\n\n\t\t\tlet fmt = \"\";\n\t\t\tfor (let i = 1; i < Math.min(2, stack.length); i++) {\n\t\t\t\tif (stack[i].getFunctionName()) {\n\t\t\t\t\t// const f = stack[i].getThis()?.constructor?.name;\n\t\t\t\t\t// if (f) fmt += `${f}.`\n\t\t\t\t\tfmt += `${stack[i].getFunctionName()} -> ` + fmt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfmt += stack[0].getFunctionName() || \"Anonymous\";\n\n\t\t\treturn fmt;\n\t\t};\n\n\t\tconst fmt = (function stack() {\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (e) {\n\t\t\t\treturn e.stack;\n\t\t\t}\n\t\t})();\n\n\t\tError.prepareStackTrace = old;\n\n\t\tconst fn = console[severity] || console.log;\n\t\tconst bg = {\n\t\t\tlog: \"#000\",\n\t\t\twarn: \"#f80\",\n\t\t\terror: \"#f00\",\n\t\t\tdebug: \"transparent\",\n\t\t}[severity];\n\t\tconst fg = {\n\t\t\tlog: \"#fff\",\n\t\t\twarn: \"#fff\",\n\t\t\terror: \"#fff\",\n\t\t\tdebug: \"gray\",\n\t\t}[severity];\n\t\tconst padding = {\n\t\t\tlog: 2,\n\t\t\twarn: 4,\n\t\t\terror: 4,\n\t\t\tdebug: 0,\n\t\t}[severity];\n\n\t\tfn(\n\t\t\t`%c${fmt}%c ${message}`,\n\t\t\t`\n\t\tbackground-color: ${bg};\n\t\tcolor: ${fg};\n\t\tpadding: ${padding}px;\n\t\tfont-weight: bold;\n\t\tfont-family: monospace;\n\t\tfont-size: 0.9em;\n\t`,\n\t\t\t`${severity === \"debug\" ? \"color: gray\" : \"\"}`,\n\t\t\t...args\n\t\t);\n\t},\n\tlog: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"log\", message, ...args);\n\t},\n\twarn: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"warn\", message, ...args);\n\t},\n\terror: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"error\", message, ...args);\n\t},\n\tdebug: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"debug\", message, ...args);\n\t},\n};\n","import { ScramjetFlags } from \"./types\";\n\nif (!(\"$scramjet\" in self)) {\n\t// @ts-expect-error ts stuff\n\tself.$scramjet = {\n\t\tversion: {\n\t\t\tbuild: COMMITHASH,\n\t\t\tversion: VERSION,\n\t\t},\n\t\tcodec: {},\n\t\tflagEnabled,\n\t};\n}\n\nexport const $scramjet = self.$scramjet;\n\nconst nativeFunction = Function;\nexport function loadCodecs() {\n\t$scramjet.codec.encode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.encode\n\t) as any;\n\t$scramjet.codec.decode = nativeFunction(\n\t\t\"url\",\n\t\t$scramjet.config.codec.decode\n\t) as any;\n}\n\nexport function flagEnabled(flag: keyof ScramjetFlags, url: URL): boolean {\n\tconst value = $scramjet.config.defaultFlags[flag];\n\tfor (const regex in $scramjet.config.siteFlags) {\n\t\tconst partialflags = $scramjet.config.siteFlags[regex];\n\t\tif (new RegExp(regex).test(url.href) && flag in partialflags) {\n\t\t\treturn partialflags[flag];\n\t\t}\n\t}\n\n\treturn value;\n}\n","import { $scramjet } from \"./scramjet\";\n\nexport const {\n\tutil: { BareClient, ScramjetHeaders, BareMuxConnection },\n\turl: { rewriteUrl, unrewriteUrl, rewriteBlob, unrewriteBlob },\n\trewrite: {\n\t\trewriteCss,\n\t\tunrewriteCss,\n\t\trewriteHtml,\n\t\tunrewriteHtml,\n\t\trewriteSrcset,\n\t\trewriteJs,\n\t\trewriteHeaders,\n\t\trewriteWorkers,\n\t\thtmlRules,\n\t},\n\tCookieStore,\n} = $scramjet.shared;\n\nexport const config = $scramjet.config;\n","import { $scramjet } from \"../scramjet\";\n\nexport function errorTemplate(trace: string, fetchedURL: string) {\n\t// turn script into a data URI so we don\"t have to escape any HTML values\n\tconst script = `\n                errorTrace.value = ${JSON.stringify(trace)};\n                fetchedURL.textContent = ${JSON.stringify(fetchedURL)};\n                for (const node of document.querySelectorAll(\"#hostname\")) node.textContent = ${JSON.stringify(location.hostname)};\n                reload.addEventListener(\"click\", () => location.reload());\n                version.textContent = ${JSON.stringify($scramjet.version.version)};\n                build.textContent = ${JSON.stringify($scramjet.version.build)};\n                \n                document.getElementById('copy-button').addEventListener('click', async () => {\n                    const text = document.getElementById('errorTrace').value;\n                    await navigator.clipboard.writeText(text);\n                    const btn = document.getElementById('copy-button');\n                    btn.textContent = 'Copied!';\n                    setTimeout(() => btn.textContent = 'Copy', 2000);\n                });\n        `;\n\n\treturn `<!DOCTYPE html>\n            <html>\n                <head>\n                    <meta charset=\"utf-8\" />\n                    <title>Scramjet</title>\n                    <style>\n                    :root {\n                        --deep: #080602;\n                        --shallow: #181412;\n                        --beach: #f1e8e1;\n                        --shore: #b1a8a1;\n                        --accent: #ffa938;\n                        --font-sans: -apple-system, system-ui, BlinkMacSystemFont, sans-serif;\n                        --font-monospace: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n                    }\n\n                    *:not(div,p,span,ul,li,i,span) {\n                        background-color: var(--deep);\n                        color: var(--beach);\n                        font-family: var(--font-sans);\n                    }\n\n                    textarea,\n                    button {\n                        background-color: var(--shallow);\n                        border-radius: 0.6em;\n                        padding: 0.6em;\n                        border: none;\n                        appearance: none;\n                        font-family: var(--font-sans);\n                        color: var(--beach);\n                    }\n\n                    button.primary {\n                        background-color: var(--accent);\n                        color: var(--deep);\n                        font-weight: bold;\n                    }\n\n                    textarea {\n                        resize: none;\n                        height: 20em;\n                        text-align: left;\n                        font-family: var(--font-monospace);\n                    }\n\n                    body {\n                        width: 100vw;\n                        height: 100vh;\n                        justify-content: center;\n                        align-items: center;\n                    }\n\n                    body,\n                    html,\n                    #inner {\n                        display: flex;\n                        align-items: center;\n                        flex-direction: column;\n                        gap: 0.5em;\n                        overflow: hidden;\n                    }\n\n                    #inner {\n                        z-index: 100;\n                    }\n\n                    #cover {\n                        position: absolute;\n                        width: 100%;\n                        height: 100%;\n                        background-color: color-mix(in srgb, var(--deep) 70%, transparent);\n                        z-index: 99;\n                    }\n\n                    #info {\n                        display: flex;\n                        flex-direction: row;\n                        align-items: flex-start;\n                        gap: 1em;\n                    }\n\n                    #version-wrapper {\n                        width: auto;\n                        text-align: right;\n                        position: absolute;\n                        top: 0.5rem;\n                        right: 0.5rem;\n                        font-size: 0.8rem;\n                        color: var(--shore)!important;\n                        i {\n                            background-color: color-mix(in srgb, var(--deep), transparent 50%);\n                            border-radius: 9999px;\n                            padding: 0.2em 0.5em;\n                        }\n                        z-index: 101;\n                    }\n\n                    #errorTrace-wrapper {\n                        position: relative;\n                        width: fit-content;\n                    }\n\n                    #copy-button {\n                        position: absolute;\n                        top: 0.5em;\n                        right: 0.5em;\n                        padding: 0.23em;\n                        cursor: pointer;\n                        opacity: 0;\n                        transition: opacity 0.4s;\n                        font-size: 0.9em;\n                    }\n\n                    #errorTrace-wrapper:hover #copy-button {\n                        opacity: 1;\n                    }\n                    </style>\n                </head>\n                <body>\n                    <div id=\"cover\"></div>\n                    <div id=\"inner\">\n                        <h1 id=\"errorTitle\">Uh oh!</h1>\n                        <p>There was an error loading <b id=\"fetchedURL\"></b></p>\n                        <!-- <p id=\"errorMessage\">Internal Server Error</p> -->\n\n                        <div id=\"info\">\n                            <div id=\"errorTrace-wrapper\">\n                                <textarea id=\"errorTrace\" cols=\"40\" rows=\"10\" readonly></textarea>\n                                <button id=\"copy-button\" class=\"primary\">Copy</button>\n                            </div>\n                            <div id=\"troubleshooting\">\n                                <p>Try:</p>\n                                <ul>\n                                    <li>Checking your internet connection</li>\n                                    <li>Verifying you entered the correct address</li>\n                                    <li>Clearing the site data</li>\n                                    <li>Contacting <b id=\"hostname\"></b>'s administrator</li>\n                                    <li>Verify the server isn't censored</li>\n                                </ul>\n                                <p>If you're the administrator of <b id=\"hostname\"></b>, try:</p>\n                                    <ul>\n                                    <li>Restarting your server</li>\n                                    <li>Updating Scramjet</li>\n                                    <li>Troubleshooting the error on the <a href=\"https://github.com/MercuryWorkshop/scramjet\" target=\"_blank\">GitHub repository</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <br>\n                        <button id=\"reload\" class=\"primary\">Reload</button>\n                    </div>\n                    <p id=\"version-wrapper\"><i>Scramjet v<span id=\"version\"></span> (build <span id=\"build\"></span>)</i></p>\n                    <script src=\"${\"data:application/javascript,\" + encodeURIComponent(script)}\"></script>\n                </body>\n            </html>\n        `;\n}\n\nexport function renderError(err: unknown, fetchedURL: string) {\n\tconst headers = {\n\t\t\"content-type\": \"text/html\",\n\t};\n\tif (crossOriginIsolated) {\n\t\theaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t}\n\n\treturn new Response(errorTemplate(String(err), fetchedURL), {\n\t\tstatus: 500,\n\t\theaders: headers,\n\t});\n}\n","import { type MessageW2R, type MessageR2W } from \"../client/swruntime\";\n\nexport class FakeServiceWorker {\n\tsyncToken = 0;\n\tpromises: Record<number, (val?: MessageR2W) => void> = {};\n\tmessageChannel = new MessageChannel();\n\tconnected = false;\n\n\tconstructor(\n\t\tpublic handle: MessagePort,\n\t\tpublic origin: string\n\t) {\n\t\tthis.messageChannel.port1.addEventListener(\"message\", (event) => {\n\t\t\tif (\"scramjet$type\" in event.data) {\n\t\t\t\tif (event.data.scramjet$type === \"init\") {\n\t\t\t\t\tthis.connected = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleMessage(event.data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.messageChannel.port1.start();\n\n\t\tthis.handle.postMessage(\n\t\t\t{\n\t\t\t\tscramjet$type: \"init\",\n\t\t\t\tscramjet$port: this.messageChannel.port2,\n\t\t\t},\n\t\t\t[this.messageChannel.port2]\n\t\t);\n\t}\n\n\thandleMessage(data: MessageR2W) {\n\t\tconst cb = this.promises[data.scramjet$token];\n\t\tif (cb) {\n\t\t\tcb(data);\n\t\t\tdelete this.promises[data.scramjet$token];\n\t\t}\n\t}\n\n\tasync fetch(request: Request): Promise<Response | false> {\n\t\tconst token = this.syncToken++;\n\n\t\tconst message: MessageW2R = {\n\t\t\tscramjet$type: \"fetch\",\n\t\t\tscramjet$token: token,\n\t\t\tscramjet$request: {\n\t\t\t\turl: request.url,\n\t\t\t\tbody: request.body,\n\t\t\t\theaders: Array.from(request.headers.entries()),\n\t\t\t\tmethod: request.method,\n\t\t\t\tmode: request.mode,\n\t\t\t\tdestinitation: request.destination,\n\t\t\t},\n\t\t};\n\n\t\tconst transfer = request.body ? [request.body] : [];\n\n\t\tthis.handle.postMessage(message, transfer);\n\n\t\tconst { scramjet$response: r } = (await new Promise((resolve) => {\n\t\t\tthis.promises[token] = resolve;\n\t\t})) as MessageR2W;\n\n\t\tif (!r) return false;\n\n\t\treturn new Response(r.body, {\n\t\t\theaders: r.headers,\n\t\t\tstatus: r.status,\n\t\t\tstatusText: r.statusText,\n\t\t});\n\t}\n}\n","import { BareResponseFetch } from \"@mercuryworkshop/bare-mux\";\nimport { MessageW2C, ScramjetServiceWorker } from \".\";\nimport { renderError } from \"./error\";\nimport { FakeServiceWorker } from \"./fakesw\";\nimport { CookieStore } from \"../shared/cookie\";\nimport {\n\tScramjetHeaders,\n\tunrewriteUrl,\n\trewriteUrl,\n\trewriteCss,\n\trewriteHeaders,\n\trewriteHtml,\n\trewriteJs,\n\trewriteWorkers,\n\tunrewriteBlob,\n} from \"../shared\";\n\nimport type { URLMeta } from \"../shared/rewriters/url\";\nimport { $scramjet } from \"../scramjet\";\n\nfunction newmeta(url: URL): URLMeta {\n\treturn {\n\t\torigin: url,\n\t\tbase: url,\n\t};\n}\n\nexport async function handleFetch(\n\tthis: ScramjetServiceWorker,\n\trequest: Request,\n\tclient: Client | null\n) {\n\tconst urlParam = new URLSearchParams(new URL(request.url).search);\n\n\tif (urlParam.has(\"url\")) {\n\t\treturn Response.redirect(\n\t\t\trewriteUrl(urlParam.get(\"url\"), newmeta(new URL(urlParam.get(\"url\"))))\n\t\t);\n\t}\n\n\ttry {\n\t\tconst requesturl = new URL(request.url);\n\t\tlet workertype = \"\";\n\t\tif (requesturl.searchParams.has(\"type\")) {\n\t\t\tworkertype = requesturl.searchParams.get(\"type\") as string;\n\t\t\trequesturl.searchParams.delete(\"type\");\n\t\t}\n\t\tif (requesturl.searchParams.has(\"dest\")) {\n\t\t\trequesturl.searchParams.delete(\"dest\");\n\t\t}\n\n\t\tif (\n\t\t\trequesturl.pathname.startsWith(this.config.prefix + \"blob:\") ||\n\t\t\trequesturl.pathname.startsWith(this.config.prefix + \"data:\")\n\t\t) {\n\t\t\tlet dataurl = requesturl.pathname.substring(this.config.prefix.length);\n\t\t\tif (dataurl.startsWith(\"blob:\")) {\n\t\t\t\tdataurl = unrewriteBlob(dataurl);\n\t\t\t}\n\n\t\t\tconst response: Partial<BareResponseFetch> = await fetch(dataurl, {});\n\t\t\tconst url = dataurl.startsWith(\"blob:\") ? dataurl : \"(data url)\";\n\t\t\tresponse.finalURL = url;\n\t\t\tlet body: BodyType;\n\n\t\t\tif (response.body) {\n\t\t\t\tbody = await rewriteBody(\n\t\t\t\t\tresponse as BareResponseFetch,\n\t\t\t\t\tclient\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tbase: new URL(new URL(client.url).origin),\n\t\t\t\t\t\t\t\torigin: new URL(new URL(client.url).origin),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: newmeta(new URL(unrewriteUrl(request.referrer))),\n\t\t\t\t\trequest.destination,\n\t\t\t\t\tworkertype,\n\t\t\t\t\tthis.cookieStore\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst headers = Object.fromEntries(response.headers.entries());\n\n\t\t\tif (crossOriginIsolated) {\n\t\t\t\theaders[\"Cross-Origin-Opener-Policy\"] = \"same-origin\";\n\t\t\t\theaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t\t\t}\n\n\t\t\treturn new Response(body, {\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: headers,\n\t\t\t});\n\t\t}\n\n\t\tconst url = new URL(unrewriteUrl(requesturl));\n\n\t\tconst activeWorker: FakeServiceWorker | null = this.serviceWorkers.find(\n\t\t\t(w) => w.origin === url.origin\n\t\t);\n\n\t\tif (\n\t\t\tactiveWorker &&\n\t\t\tactiveWorker.connected &&\n\t\t\turlParam.get(\"from\") !== \"swruntime\"\n\t\t) {\n\t\t\t// TODO: check scope\n\t\t\tconst r = await activeWorker.fetch(request);\n\t\t\tif (r) return r;\n\t\t}\n\t\tif (url.origin == new URL(request.url).origin) {\n\t\t\tthrow new Error(\n\t\t\t\t\"attempted to fetch from same origin - this means the site has obtained a reference to the real origin, aborting\"\n\t\t\t);\n\t\t}\n\n\t\tconst headers = new ScramjetHeaders();\n\t\tfor (const [key, value] of request.headers.entries()) {\n\t\t\theaders.set(key, value);\n\t\t}\n\n\t\tif (\n\t\t\tclient &&\n\t\t\tnew URL(client.url).pathname.startsWith($scramjet.config.prefix)\n\t\t) {\n\t\t\t// TODO: i was against cors emulation but we might actually break stuff if we send full origin/referrer always\n\t\t\tconst clientURL = new URL(unrewriteUrl(client.url));\n\t\t\tif (clientURL.toString().includes(\"youtube.com\")) {\n\t\t\t\t// console.log(headers);\n\t\t\t} else {\n\t\t\t\theaders.set(\"Referer\", clientURL.toString());\n\t\t\t\theaders.set(\"Origin\", clientURL.origin);\n\t\t\t}\n\t\t}\n\n\t\tconst cookies = this.cookieStore.getCookies(url, false);\n\n\t\tif (cookies.length) {\n\t\t\theaders.set(\"Cookie\", cookies);\n\t\t}\n\n\t\theaders.set(\"Sec-Fetch-Dest\", request.destination);\n\t\t//TODO: Emulate this later (like really)\n\t\theaders.set(\"Sec-Fetch-Site\", \"same-origin\");\n\t\theaders.set(\n\t\t\t\"Sec-Fetch-Mode\",\n\t\t\trequest.mode === \"cors\" ? request.mode : \"same-origin\"\n\t\t);\n\n\t\tconst ev = new ScramjetRequestEvent(\n\t\t\turl,\n\t\t\trequest.body,\n\t\t\trequest.method,\n\t\t\trequest.destination,\n\t\t\tclient,\n\t\t\theaders.headers\n\t\t);\n\t\tthis.dispatchEvent(ev);\n\n\t\tconst response: BareResponseFetch =\n\t\t\tev.response ||\n\t\t\t(await this.client.fetch(ev.url, {\n\t\t\t\tmethod: ev.method,\n\t\t\t\tbody: ev.body,\n\t\t\t\theaders: ev.requestHeaders,\n\t\t\t\tcredentials: \"omit\",\n\t\t\t\tmode: request.mode === \"cors\" ? request.mode : \"same-origin\",\n\t\t\t\tcache: request.cache,\n\t\t\t\tredirect: \"manual\",\n\t\t\t\t//@ts-ignore why the fuck is this not typed mircosoft\n\t\t\t\tduplex: \"half\",\n\t\t\t}));\n\n\t\treturn await handleResponse(\n\t\t\turl,\n\t\t\tworkertype,\n\t\t\trequest.destination,\n\t\t\tresponse,\n\t\t\tthis.cookieStore,\n\t\t\tclient,\n\t\t\tthis\n\t\t);\n\t} catch (err) {\n\t\tconst errorDetails = {\n\t\t\tmessage: err.message,\n\t\t\turl: request.url,\n\t\t\tdestination: request.destination,\n\t\t\ttimestamp: new Date().toISOString(),\n\t\t};\n\t\tif (err.stack) {\n\t\t\terrorDetails[\"stack\"] = err.stack;\n\t\t}\n\n\t\tconsole.error(\"ERROR FROM SERVICE WORKER FETCH: \", errorDetails);\n\n\t\tif (![\"document\", \"iframe\"].includes(request.destination))\n\t\t\treturn new Response(undefined, { status: 500 });\n\n\t\tconst formattedError = Object.entries(errorDetails)\n\t\t\t.map(\n\t\t\t\t([key, value]) =>\n\t\t\t\t\t`${key.charAt(0).toUpperCase() + key.slice(1)}: ${value}`\n\t\t\t)\n\t\t\t.join(\"\\n\\n\");\n\n\t\treturn renderError(formattedError, unrewriteUrl(request.url));\n\t}\n}\n\nasync function handleResponse(\n\turl: URL,\n\tworkertype: string,\n\tdestination: RequestDestination,\n\tresponse: BareResponseFetch,\n\tcookieStore: CookieStore,\n\tclient: Client,\n\tswtarget: ScramjetServiceWorker\n): Promise<Response> {\n\tlet responseBody: BodyType;\n\tconst responseHeaders = rewriteHeaders(response.rawHeaders, newmeta(url));\n\n\tconst maybeHeaders = responseHeaders[\"set-cookie\"] || [];\n\tfor (const cookie in maybeHeaders) {\n\t\tif (client)\n\t\t\tclient.postMessage({\n\t\t\t\tscramjet$type: \"cookie\",\n\t\t\t\tcookie,\n\t\t\t\turl: url.href,\n\t\t\t} as MessageW2C);\n\t}\n\n\tawait cookieStore.setCookies(\n\t\tmaybeHeaders instanceof Array ? maybeHeaders : [maybeHeaders],\n\t\turl\n\t);\n\n\tfor (const header in responseHeaders) {\n\t\t// flatten everything past here\n\t\tif (Array.isArray(responseHeaders[header]))\n\t\t\tresponseHeaders[header] = responseHeaders[header][0];\n\t}\n\n\tif (response.body) {\n\t\tresponseBody = await rewriteBody(\n\t\t\tresponse,\n\t\t\tnewmeta(url),\n\t\t\tdestination,\n\t\t\tworkertype,\n\t\t\tcookieStore\n\t\t);\n\t}\n\n\t// downloads\n\tif ([\"document\", \"iframe\"].includes(destination)) {\n\t\tconst header = responseHeaders[\"content-disposition\"];\n\n\t\t// validate header and test for filename\n\t\tif (!/\\s*?((inline|attachment);\\s*?)filename=/i.test(header)) {\n\t\t\t// if filename= wasn\"t specified then maybe the remote specified to download this as an attachment?\n\t\t\t// if it\"s invalid then we can still possibly test for the attachment/inline type\n\t\t\tconst type = /^\\s*?attachment/i.test(header) ? \"attachment\" : \"inline\";\n\n\t\t\t// set the filename\n\t\t\tconst [filename] = new URL(response.finalURL).pathname\n\t\t\t\t.split(\"/\")\n\t\t\t\t.slice(-1);\n\n\t\t\tresponseHeaders[\"content-disposition\"] =\n\t\t\t\t`${type}; filename=${JSON.stringify(filename)}`;\n\t\t}\n\t}\n\tif (responseHeaders[\"accept\"] === \"text/event-stream\") {\n\t\tresponseHeaders[\"content-type\"] = \"text/event-stream\";\n\t}\n\n\t// scramjet runtime can use features that permissions-policy blocks\n\tdelete responseHeaders[\"permissions-policy\"];\n\n\tif (\n\t\tcrossOriginIsolated &&\n\t\t[\n\t\t\t\"document\",\n\t\t\t\"iframe\",\n\t\t\t\"worker\",\n\t\t\t\"sharedworker\",\n\t\t\t\"style\",\n\t\t\t\"script\",\n\t\t].includes(destination)\n\t) {\n\t\tresponseHeaders[\"Cross-Origin-Embedder-Policy\"] = \"require-corp\";\n\t\tresponseHeaders[\"Cross-Origin-Opener-Policy\"] = \"same-origin\";\n\t}\n\n\tconst ev = new ScramjetHandleResponseEvent(\n\t\tresponseBody,\n\t\tresponseHeaders,\n\t\tresponse.status,\n\t\tresponse.statusText,\n\t\tdestination,\n\t\turl,\n\t\tresponse,\n\t\tclient\n\t);\n\tswtarget.dispatchEvent(ev);\n\n\treturn new Response(ev.responseBody, {\n\t\theaders: ev.responseHeaders as HeadersInit,\n\t\tstatus: ev.status,\n\t\tstatusText: ev.statusText,\n\t});\n}\n\nasync function rewriteBody(\n\tresponse: BareResponseFetch,\n\tmeta: URLMeta,\n\tdestination: RequestDestination,\n\tworkertype: string,\n\tcookieStore: CookieStore\n): Promise<BodyType> {\n\tswitch (destination) {\n\t\tcase \"iframe\":\n\t\tcase \"document\":\n\t\t\tif (response.headers.get(\"content-type\")?.startsWith(\"text/html\")) {\n\t\t\t\treturn rewriteHtml(await response.text(), cookieStore, meta, true);\n\t\t\t} else {\n\t\t\t\treturn response.body;\n\t\t\t}\n\t\tcase \"script\":\n\t\t\treturn rewriteJs(await response.arrayBuffer(), response.finalURL, meta);\n\t\tcase \"style\":\n\t\t\treturn rewriteCss(await response.text(), meta);\n\t\tcase \"sharedworker\":\n\t\tcase \"worker\":\n\t\t\treturn rewriteWorkers(\n\t\t\t\tawait response.arrayBuffer(),\n\t\t\t\tworkertype,\n\t\t\t\tresponse.finalURL,\n\t\t\t\tmeta\n\t\t\t);\n\t\tdefault:\n\t\t\treturn response.body;\n\t}\n}\n\ntype BodyType = string | ArrayBuffer | Blob | ReadableStream<any>;\n\nexport class ScramjetHandleResponseEvent extends Event {\n\tconstructor(\n\t\tpublic responseBody: BodyType,\n\t\tpublic responseHeaders: Record<string, string>,\n\t\tpublic status: number,\n\t\tpublic statusText: string,\n\t\tpublic destination: string,\n\t\tpublic url: URL,\n\t\tpublic rawResponse: BareResponseFetch,\n\t\tpublic client: Client\n\t) {\n\t\tsuper(\"handleResponse\");\n\t}\n}\n\nexport class ScramjetRequestEvent extends Event {\n\tconstructor(\n\t\tpublic url: URL,\n\t\tpublic body: BodyType,\n\t\tpublic method: string,\n\t\tpublic destination: string,\n\t\tpublic client: Client,\n\t\tpublic requestHeaders: Record<string, string>\n\t) {\n\t\tsuper(\"request\");\n\t}\n\tpublic response?: BareResponseFetch;\n}\n","import { FakeServiceWorker } from \"./fakesw\";\nimport { handleFetch } from \"./fetch\";\nimport type BareClient from \"@mercuryworkshop/bare-mux\";\nimport { ScramjetConfig } from \"../types\";\nimport { $scramjet, loadCodecs } from \"../scramjet\";\n\nexport class ScramjetServiceWorker extends EventTarget {\n\tclient: BareClient;\n\tconfig: ScramjetConfig;\n\n\tsyncPool: Record<number, (val?: any) => void> = {};\n\tsynctoken = 0;\n\n\tcookieStore = new $scramjet.shared.CookieStore();\n\n\tserviceWorkers: FakeServiceWorker[] = [];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.client = new $scramjet.shared.util.BareClient();\n\n\t\tconst db = indexedDB.open(\"$scramjet\", 1);\n\n\t\tdb.onsuccess = () => {\n\t\t\tconst res = db.result;\n\t\t\tconst tx = res.transaction(\"cookies\", \"readonly\");\n\t\t\tconst store = tx.objectStore(\"cookies\");\n\t\t\tconst cookies = store.get(\"cookies\");\n\n\t\t\tcookies.onsuccess = () => {\n\t\t\t\tif (cookies.result) {\n\t\t\t\t\tthis.cookieStore.load(cookies.result);\n\t\t\t\t\tdbg.log(\"Loaded cookies from IDB!\");\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\taddEventListener(\"message\", async ({ data }: { data: MessageC2W }) => {\n\t\t\tif (!(\"scramjet$type\" in data)) return;\n\n\t\t\tif (data.scramjet$type === \"registerServiceWorker\") {\n\t\t\t\tthis.serviceWorkers.push(new FakeServiceWorker(data.port, data.origin));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data.scramjet$type === \"cookie\") {\n\t\t\t\tthis.cookieStore.setCookies([data.cookie], new URL(data.url));\n\t\t\t\tconst res = db.result;\n\t\t\t\tconst tx = res.transaction(\"cookies\", \"readwrite\");\n\t\t\t\tconst store = tx.objectStore(\"cookies\");\n\t\t\t\tstore.put(JSON.parse(this.cookieStore.dump()), \"cookies\");\n\t\t\t}\n\t\t});\n\t}\n\n\tasync loadConfig() {\n\t\tif (this.config) return;\n\n\t\tconst request = indexedDB.open(\"$scramjet\", 1);\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\trequest.onsuccess = async () => {\n\t\t\t\tconst db = request.result;\n\t\t\t\tconst tx = db.transaction(\"config\", \"readonly\");\n\t\t\t\tconst store = tx.objectStore(\"config\");\n\t\t\t\tconst config = store.get(\"config\");\n\n\t\t\t\tconfig.onsuccess = () => {\n\t\t\t\t\tthis.config = config.result;\n\t\t\t\t\t$scramjet.config = config.result;\n\n\t\t\t\t\tloadCodecs();\n\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t\tconfig.onerror = () => reject(config.error);\n\t\t\t};\n\n\t\t\trequest.onerror = () => reject(request.error);\n\t\t});\n\t}\n\n\troute({ request }: FetchEvent) {\n\t\tif (request.url.startsWith(location.origin + this.config.prefix))\n\t\t\treturn true;\n\t\telse return false;\n\t}\n\n\tasync fetch({ request, clientId }: FetchEvent) {\n\t\tconst client = await self.clients.get(clientId);\n\n\t\treturn handleFetch.call(this, request, client);\n\t}\n}\n\n// @ts-ignore\nself.ScramjetServiceWorker = ScramjetServiceWorker;\n\ntype RegisterServiceWorkerMessage = {\n\tscramjet$type: \"registerServiceWorker\";\n\tport: MessagePort;\n\torigin: string;\n};\n\ntype CookieMessage = {\n\tscramjet$type: \"cookie\";\n\tcookie: string;\n\turl: string;\n};\n\ntype MessageCommon = {\n\tscramjet$type: string;\n\tscramjet$token: number;\n};\n\ntype MessageTypeC2W = RegisterServiceWorkerMessage | CookieMessage;\ntype MessageTypeW2C = CookieMessage;\n\n// c2w: client to (service) worker\nexport type MessageC2W = MessageCommon & MessageTypeC2W;\nexport type MessageW2C = MessageCommon & MessageTypeW2C;\n"],"names":["severity","message","args","old","Error","_","stack","fmt","i","Math","e","fn","console","bg","fg","padding","self","COMMITHASH","VERSION","flagEnabled","$scramjet","nativeFunction","Function","loadCodecs","flag","url","value","regex","partialflags","RegExp","BareClient","ScramjetHeaders","BareMuxConnection","rewriteUrl","unrewriteUrl","rewriteBlob","unrewriteBlob","rewriteCss","unrewriteCss","rewriteHtml","unrewriteHtml","rewriteSrcset","rewriteJs","rewriteHeaders","rewriteWorkers","htmlRules","CookieStore","config","errorTemplate","trace","fetchedURL","script","JSON","location","encodeURIComponent","renderError","err","headers","crossOriginIsolated","Response","String","FakeServiceWorker","handle","origin","MessageChannel","event","data","cb","request","token","Array","transfer","r","Promise","resolve","newmeta","handleFetch","client","urlParam","URLSearchParams","URL","requesturl","workertype","dataurl","response","fetch","body","rewriteBody","Object","activeWorker","w","key","clientURL","cookies","ev","ScramjetRequestEvent","handleResponse","errorDetails","Date","undefined","formattedError","destination","cookieStore","swtarget","responseBody","responseHeaders","maybeHeaders","cookie","header","type","filename","ScramjetHandleResponseEvent","meta","Event","status","statusText","rawResponse","method","requestHeaders","ScramjetServiceWorker","EventTarget","db","indexedDB","res","tx","store","dbg","addEventListener","reject","clientId"],"mappings":"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"}